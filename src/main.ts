import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { AllExceptionsFilter } from './common/filters/all-exceptions.filter'; 
import { LoggingInterceptor } from './common/interceptors/logging.interceptor';
import { CustomValidationPipe } from './common/pipes/validation.pipe';
import * as dotenv from 'dotenv';
dotenv.config();

async function bootstrap() {
  try {
    console.log('‚úÖ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    console.log('MONGO_URI:', process.env.MONGO_URI);
    console.log('PORT:', process.env.PORT);
    console.log('JWT_SECRET:', process.env.JWT_SECRET);
    console.log('TELEGRAM_BOT_TOKEN:', process.env.TELEGRAM_BOT_TOKEN);

    const app = await NestFactory.create(AppModule);
    
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ');
    
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤');
    app.useGlobalFilters(new AllExceptionsFilter());
    
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä–æ–≤');
    app.useGlobalInterceptors(new LoggingInterceptor());
    
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤');
    app.useGlobalPipes(new CustomValidationPipe());
    
    await app.listen(process.env.PORT || 3000, '0.0.0.0');
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${process.env.PORT || 3000}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
    process.exit(1);
  }
}
bootstrap();